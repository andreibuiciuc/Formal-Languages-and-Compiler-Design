multiple_statements program_entry declaration_statement declaration_list statement_list statement simple_statement struct_statement compound_statement assignment_statement expression_statement term factor io_statement conditional_statement condition RELATION iterate_statement while_statement
ID { } ; + - * / % = == < <= > >= != [ ] ( ) ++ -- and or not @let @check @otherwise @iterate @while @stop @print @enter , :
program_entry
program_entry ::= declaration_statement ";" statement_list
declaration_statement ::= "@let" declaration_list
declaration_list ::= "ID" | "ID" "," declaration_list
statement_list ::= statement ";" statement_list | statement ";"
statement ::=  simple_statement | struct_statement
simple_statement ::=  assignment_statement | io_statement
struct_statement ::= compound_statement | conditional_statement | iterate_statement | while_statement
compound_statement ::= "{" statement_list "}"
assignment_statement ::= "ID" "=" expression_statement
expression_statement ::= expression_statement "+" term | expression_statement "-" term | term
term ::= term "*" factor | term "/" factor | factor
factor ::= "(" expression_statement ")" | "ID"
io_statement ::= "@enter" "ID" | "@print" "ID"
conditional_statement ::= "@check" "(" condition ")" statement_list | "@check" "(" condition ")" statement_list "@otherwise" statement_list
condition ::= expression_statement RELATION expression_statement
RELATION ::= "==" | "is" | "!=" | "<" | "<=" | ">" | ">="
iterate_statement ::= "@iterate" "(" "ID" "," CONSTANT "," expression_statement "," "step=" CONSTANT ")"  statement
while_statement ::= "@while" "(" condition ")" compound_statement